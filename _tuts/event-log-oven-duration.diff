diff --git a/modules/custom/beignet/beignet.services.yml b/modules/custom/beignet/beignet.services.yml
index a8b0d9f..9b38be7 100644
--- a/modules/custom/beignet/beignet.services.yml
+++ b/modules/custom/beignet/beignet.services.yml
@@ -5,6 +5,6 @@ services:
 
   beignet.oven_initializer:
     class: Drupal\beignet\EventSubscriber\OvenInitializer
-    arguments: ['@beignet.beignet_bakery']
+    arguments: ['@beignet.beignet_bakery', '@logger.factory']
     tags:
       - { name: event_subscriber }
diff --git a/modules/custom/beignet/src/EventSubscriber/OvenInitializer.php b/modules/custom/beignet/src/EventSubscriber/OvenInitializer.php
index 4e05c23..55f2811 100644
--- a/modules/custom/beignet/src/EventSubscriber/OvenInitializer.php
+++ b/modules/custom/beignet/src/EventSubscriber/OvenInitializer.php
@@ -3,24 +3,34 @@
 namespace Drupal\beignet\EventSubscriber;
 
 use Drupal\beignet\Service\BeignetBakery;
+use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
 class OvenInitializer implements EventSubscriberInterface {
   private $bakery;
+  private $ovenStartedAt;
+  private $loggerChannelFactory;
 
-  public function __construct(BeignetBakery $bakery)
+  public function __construct(BeignetBakery $bakery, LoggerChannelFactoryInterface $loggerChannelFactory)
   {
     $this->bakery = $bakery;
+    $this->loggerChannelFactory = $loggerChannelFactory;
   }
 
   public function onKernelRequest()
   {
     $this->bakery->turnOnOven();
+    $this->ovenStartedAt = microtime(true);
   }
 
   public function onKernelResponse()
   {
     $this->bakery->turnOffOven();
+    $duration = microtime(true) - $this->ovenStartedAt;
+
+    $this->loggerChannelFactory
+      ->get('database')
+      ->info(sprintf('Oven was on for %s seconds', $duration));
   }
 
   static function getSubscribedEvents() {
